# Generated by Django 2.2.5 on 2019-10-25 10:33

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('code', models.CharField(max_length=2, unique=True)),
            ],
            options={
                'verbose_name': 'Country',
                'verbose_name_plural': 'Countries',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Frequency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('frequency', models.CharField(max_length=50, unique=True, verbose_name='Frequency')),
            ],
            options={
                'verbose_name': 'Frequency',
                'verbose_name_plural': 'Frequencies',
            },
        ),
        migrations.CreateModel(
            name='Indicator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('indicator', models.CharField(max_length=50, unique=True, verbose_name='Indicator')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
            ],
            options={
                'verbose_name': 'Indicator',
                'verbose_name_plural': 'Indicators',
            },
        ),
        migrations.CreateModel(
            name='IndicatorCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=50, unique=True, verbose_name='Category')),
            ],
            options={
                'verbose_name': 'Indicator Category',
                'verbose_name_plural': 'Indicator Categories',
            },
        ),
        migrations.CreateModel(
            name='NatureValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Nature')),
            ],
            options={
                'verbose_name': 'Nature Value',
                'verbose_name_plural': 'Nature Value',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source', models.CharField(max_length=50, unique=True, verbose_name='Source')),
            ],
            options={
                'verbose_name': 'Source',
                'verbose_name_plural': 'Sources',
            },
        ),
        migrations.CreateModel(
            name='Thematic_App',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Thematique')),
            ],
            options={
                'verbose_name': 'Thematique',
                'verbose_name_plural': 'Thematiques',
            },
        ),
        migrations.CreateModel(
            name='TypeValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Type')),
            ],
            options={
                'verbose_name': 'Type Value',
                'verbose_name_plural': 'Type Value',
            },
        ),
        migrations.CreateModel(
            name='UnitValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit', models.CharField(max_length=50, unique=True, verbose_name='Unit')),
            ],
            options={
                'verbose_name': 'Unit Value',
                'verbose_name_plural': 'Unit Value',
            },
        ),
        migrations.CreateModel(
            name='Value',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='Value')),
                ('date', models.DateField(verbose_name='Date')),
                ('frequency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='valeue_frequency', to='biapi.Frequency')),
                ('indicator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='value_indicator', to='biapi.Indicator')),
                ('natureValue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='value_nature', to='biapi.NatureValue')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='value_source', to='biapi.Source')),
                ('typeValue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='type_value', to='biapi.TypeValue')),
                ('unitValue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='unit_value', to='biapi.UnitValue')),
            ],
            options={
                'verbose_name': 'Value',
                'verbose_name_plural': 'Values',
            },
        ),
        migrations.CreateModel(
            name='Source_Externe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Application')),
                ('website', models.CharField(max_length=100, unique=True, verbose_name='Site Web')),
                ('logo', models.FileField(upload_to='images/sourcesext/', verbose_name='Application Logo')),
                ('thematic', models.ManyToManyField(to='biapi.Thematic_App')),
            ],
            options={
                'verbose_name': 'Source Externe',
                'verbose_name_plural': 'Source Externes',
            },
        ),
        migrations.CreateModel(
            name='Peer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('site', models.URLField(blank=True)),
                ('brandlogo', models.FileField(null=True, upload_to='images/', verbose_name='Application Logo')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='peers', to='biapi.Country')),
                ('products', models.ManyToManyField(to='biapi.Product')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='indicator',
            name='indicatorCategory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ind_cat', to='biapi.IndicatorCategory'),
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('site', models.URLField(blank=True)),
                ('brandlogo', models.FileField(null=True, upload_to='images/', verbose_name='Application Logo')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clients', to='biapi.Country')),
                ('products', models.ManyToManyField(to='biapi.Product')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='App_Interne',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Application')),
                ('website', models.CharField(max_length=100, unique=True, verbose_name='Site Web')),
                ('description', models.CharField(blank=True, max_length=250, null=True, verbose_name='About this app')),
                ('logo', models.FileField(upload_to='images/', verbose_name='Application Logo')),
                ('image', models.FileField(blank=True, null=True, upload_to='images/', verbose_name='Application Image')),
                ('thematic', models.ManyToManyField(to='biapi.Thematic_App')),
            ],
            options={
                'verbose_name': 'Application',
                'verbose_name_plural': 'Applications',
            },
        ),
    ]
